[[1.410391,{"lines":{"0":[["                                                                                                                                                               ",{}]],"1":[["    ",{}],["\"",{"fg":10,"bold":true}],["          ",{}],["#",{"fg":11,"bold":true}],["        ",{}],["\"",{"fg":9,"bold":true}],["                         ",{}],["#",{"fg":11,"bold":true}],["        ",{}],["\"",{"fg":13,"bold":true}],["                                                                                                   ",{}]],"2":[["  ",{}],["mm",{"fg":10,"bold":true}],["m",{"fg":14,"bold":true}],["   ",{}],["m",{"fg":13,"bold":true}],["   ",{}],["m",{"fg":11,"bold":true}],["  ",{}],["#",{"fg":10,"bold":true}],["mm",{"fg":14,"bold":true}],["m",{"fg":12,"bold":true}],["   ",{}],["mm",{"fg":9,"bold":true}],["m",{"fg":11,"bold":true}],["     ",{}],["mm",{"fg":12,"bold":true}],["m",{"fg":13,"bold":true}],["   ",{}],["m",{"fg":11,"bold":true}],[" ",{}],["mm",{"fg":10,"bold":true}],["    ",{}],["mm",{"fg":13,"bold":true}],["m",{"fg":9,"bold":true}],["   ",{}],["#",{"fg":10,"bold":true}],[" ",{}],["mm",{"fg":14,"bold":true}],["   ",{}],["m",{"fg":13,"bold":true}],["mm",{"fg":9,"bold":true}],["                                                                                                   ",{}]],"3":[["    ",{}],["#",{"fg":12,"bold":true}],["   ",{}],["#",{"fg":9,"bold":true}],["   ",{}],["#",{"fg":10,"bold":true}],["  ",{}],["#",{"fg":14,"bold":true}],["\"",{"fg":12,"bold":true}],[" ",{}],["\"#",{"fg":13,"bold":true}],["    ",{}],["#",{"fg":10,"bold":true}],["    ",{}],["\"",{"fg":12,"bold":true}],["   ",{}],["#",{"fg":9,"bold":true}],["  ",{}],["#\"",{"fg":10,"bold":true}],["  ",{}],["#",{"fg":12,"bold":true}],["  ",{}],["#",{"fg":13,"bold":true}],["\"",{"fg":9,"bold":true}],["  ",{}],["\"",{"fg":11,"bold":true}],["  ",{}],["#\"",{"fg":14,"bold":true}],["  ",{}],["#",{"fg":13,"bold":true}],["    ",{}],["#",{"fg":11,"bold":true}],["                                                                                                   ",{}]],"4":[["    ",{}],["#",{"fg":13,"bold":true}],["   ",{}],["#",{"fg":11,"bold":true}],["   ",{}],["#",{"fg":14,"bold":true}],["  ",{}],["#",{"fg":12,"bold":true}],["   ",{}],["#",{"fg":9,"bold":true}],["    ",{}],["#",{"fg":14,"bold":true}],["    ",{}],["m",{"fg":13,"bold":true}],["                                                                                                                                 ",{}]],"5":[["                                                                                                                                                               ",{}]],"6":[["                                                                                                                                                               ",{}]],"7":[["                                                                                                                                                               ",{}]],"8":[["                                                                                                                                                               ",{}]],"9":[["                                                                                                                                                               ",{}]],"10":[["                                                                                                                                                               ",{}]],"11":[["                                                                                                                                                               ",{}]],"12":[["                                                                                                                                                               ",{}]],"13":[["                                                                                                                                                               ",{}]],"14":[["                                                                                                                                                               ",{}]],"15":[["                                                                                                                                                               ",{}]],"16":[["                                                                                                                                                               ",{}]],"17":[["                                                                                                                                                               ",{}]],"18":[["                                                                                                                                                               ",{}]],"19":[["                                                                                                                                                               ",{}]],"20":[["                                                                                                                                                               ",{}]],"21":[["                                                                                                                                                               ",{}]],"22":[["                                                                                                                                                               ",{}]],"23":[["                                                                                                                                                               ",{}]],"24":[["                                                                                                                                                               ",{}]],"25":[["                                                                                                                                                               ",{}]],"26":[["                                                                                                                                                               ",{}]],"27":[["                                                                                                                                                               ",{}]],"28":[["                                                                                                                                                               ",{}]],"29":[["                                                                                                                                                               ",{}]],"30":[["                                                                                                                                                               ",{}]],"31":[["                                                                                                                                                               ",{}]],"32":[["                                                                                                                                                               ",{}]],"33":[["                                                                                                                                                               ",{}]]},"cursor":{"x":30,"y":4,"visible":true}}],[4.4e-05,{"lines":{"4":[["    ",{}],["#",{"fg":13,"bold":true}],["   ",{}],["#",{"fg":11,"bold":true}],["   ",{}],["#",{"fg":14,"bold":true}],["  ",{}],["#",{"fg":12,"bold":true}],["   ",{}],["#",{"fg":9,"bold":true}],["    ",{}],["#",{"fg":14,"bold":true}],["    ",{}],["m",{"fg":13,"bold":true}],["\"\"",{"fg":9,"bold":true}],["\"#",{"fg":11,"bold":true}],["  ",{}],["#",{"fg":14,"bold":true}],["   ",{}],["#",{"fg":13,"bold":true}],["  ",{}],["#",{"fg":9,"bold":true}],["      ",{}],["#",{"fg":12,"bold":true}],["   ",{}],["#",{"fg":9,"bold":true}],["    ",{}],["#",{"fg":10,"bold":true}],["                                                                                                   ",{}]],"5":[["    ",{}],["#",{"fg":9,"bold":true}],["   ",{}],["\"m",{"fg":10,"bold":true}],["m\"",{"fg":14,"bold":true}],["#",{"fg":12,"bold":true}],["  ",{}],["#",{"fg":13,"bold":true}],["#m",{"fg":9,"bold":true}],["#\"",{"fg":11,"bold":true}],["  ",{}],["mm",{"fg":14,"bold":true}],["#m",{"fg":12,"bold":true}],["m",{"fg":13,"bold":true}],["  ",{}],["\"",{"fg":9,"bold":true}],["mm",{"fg":11,"bold":true}],["\"#",{"fg":10,"bold":true}],["  ",{}],["#",{"fg":12,"bold":true}],["   ",{}],["#",{"fg":9,"bold":true}],["  ",{}],["\"",{"fg":11,"bold":true}],["#m",{"fg":10,"bold":true}],["m\"",{"fg":14,"bold":true}],["  ",{}],["#",{"fg":13,"bold":true}],["   ",{}],["#",{"fg":11,"bold":true}],["  ",{}],["m",{"fg":10,"bold":true}],["m#",{"fg":14,"bold":true}],["mm",{"fg":12,"bold":true}],["                                                                                                 ",{}]],"6":[["    ",{}],["#",{"fg":11,"bold":true}],["                                                                                                                                                          ",{}]],"7":[["  ",{}],["\"\"",{"fg":11,"bold":true}],["                                                                                                                                                           ",{}]]},"cursor":{"x":0,"y":8}}],[0.035302,{}],[0.001708,{}],[0.662366,{"lines":{"8":[[" jubianchi ",{"bg":0}],["⮀ ~/sources/atoum ",{"fg":0,"bg":4}],["⮀",{"fg":4,"bg":0}],[" ⱱ * ",{"fg":2,"bg":0}],["⮀ ⭠ atoum-phpunit@a990b23 ",{"fg":0,"bg":3}],["⮀",{"fg":3}],["                                                                                                 ",{}]],"9":[[" $ ",{"bg":0}],["⮀",{"fg":0}],["                                                                                                                     ",{}],["⮂",{"fg":4}],[" lun. 30 déc. 2013 17:40:09 ",{"fg":7,"bg":4}],["⮂",{"fg":1,"bg":4}],[" 5.4.6 ",{"fg":7,"bg":1}],[" ",{}]]},"cursor":{"x":5,"y":9}}],[0.000117,{}],[0.907506,{"lines":{"0":[[" jubianchi ",{"bg":0}],["⮀ ~/sources/atoum ",{"fg":0,"bg":4}],["⮀",{"fg":4,"bg":0}],[" ⱱ * ",{"fg":2,"bg":0}],["⮀ ⭠ atoum-phpunit@a990b23 ",{"fg":0,"bg":3}],["⮀",{"fg":3}],["                                                                                                 ",{}]],"1":[[" $ ",{"bg":0}],["⮀",{"fg":0}],["                                                                                                                     ",{}],["⮂",{"fg":4}],[" lun. 30 déc. 2013 17:40:09 ",{"fg":7,"bg":4}],["⮂",{"fg":1,"bg":4}],[" 5.4.6 ",{"fg":7,"bg":1}],[" ",{}]],"2":[["                                                                                                                                                               ",{}]],"3":[["                                                                                                                                                               ",{}]],"4":[["                                                                                                                                                               ",{}]],"5":[["                                                                                                                                                               ",{}]],"6":[["                                                                                                                                                               ",{}]],"7":[["                                                                                                                                                               ",{}]],"8":[["                                                                                                                                                               ",{}]],"9":[["                                                                                                                                                               ",{}]]},"cursor":{"y":1}}],[0.362118,{"lines":{"1":[[" $ ",{"bg":0}],["⮀",{"fg":0}],[" ",{}],["asciiio",{"fg":2}],["                                                                                                             ",{}],["⮂",{"fg":4}],[" lun. 30 déc. 2013 17:40:09 ",{"fg":7,"bg":4}],["⮂",{"fg":1,"bg":4}],[" 5.4.6 ",{"fg":7,"bg":1}],[" ",{}]]},"cursor":{"x":12}}],[0.415159,{"lines":{"1":[[" $ ",{"bg":0}],["⮀",{"fg":0}],[" ",{}],["asciiio",{"fg":2}],[" auth                                                                                                        ",{}],["⮂",{"fg":4}],[" lun. 30 déc. 2013 17:40:09 ",{"fg":7,"bg":4}],["⮂",{"fg":1,"bg":4}],[" 5.4.6 ",{"fg":7,"bg":1}],[" ",{}]]},"cursor":{"x":17}}],[0.39273,{"lines":{"1":[[" $ ",{"bg":0}],["⮀",{"fg":0}],[" ",{}],["bin/atoum",{"fg":2}],[" -f ",{}],["tests/units/phpunit/AssertTest.php",{"underline":true}],[" -bf ",{}],["tests/units/phpunit/bootstrap.php",{"underline":true}],[" -m mageekguy\\\\atoum\\\\tests\\\\phpunit\\\\Framework_AssertTest::testAsser",{}]],"2":[["tArrayHasKeyAcceptsArrayAccessValue --loop                                                                                                                     ",{}]]},"cursor":{"x":42,"y":2}}],[1.397536,{}],[0.151893,{}],[0.168087,{}],[0.441053,{"cursor":{"x":0,"y":3}}],[0.105488,{"lines":{"3":[["> ",{}],["PHP path",{"fg":6,"bold":true}],[": /usr/bin/php5                                                                                                                                      ",{}]],"4":[["> ",{}],["PHP version",{"fg":6,"bold":true}],[":                                                                                                                                                 ",{}]],"5":[["=> ",{"fg":6,"bold":true}],["PHP 5.4.6-1ubuntu1.5 (cli) (built: Dec 12 2013 04:39:44)                                                                                                    ",{}]],"6":[["=> ",{"fg":6,"bold":true}],["Copyright (c) 1997-2012 The PHP Group                                                                                                                       ",{}]],"7":[["=> ",{"fg":6,"bold":true}],["Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies                                                                                               ",{}]]},"cursor":{"y":8}}],[0.115323,{"lines":{"8":[["> ",{}],["mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest",{"fg":6,"bold":true}],["...                                                                                                        ",{}]],"9":[["[.___________________________________________________________][0/1]                                                                                            ",{}]]},"cursor":{"x":67,"y":9}}],[0.186806,{"lines":{"9":[["[X___________________________________________________________][1/1]                                                                                            ",{}]]}}],[0.007845000000000001,{"lines":{"0":[["string(3) \"foo\"                                                                                                                                                ",{}]],"1":[["object(SampleArrayAccess)#1656 (1) {                                                                                                                           ",{}]],"2":[["  [\"container\":\"SampleArrayAccess\":private]=>                                                                                                                  ",{}]],"3":[["  array(1) {                                                                                                                                                   ",{}]],"4":[["    [\"foo\"]=>                                                                                                                                                  ",{}]],"5":[["    string(3) \"bar\"                                                                                                                                            ",{}]],"6":[["  }                                                                                                                                                            ",{}]],"7":[["}                                                                                                                                                              ",{}]],"8":[["bool(false)                                                                                                                                                    ",{}]],"9":[["> ",{}],["There is 1 exception",{"fg":5}],[":                                                                                                                                        ",{}]],"10":[["=> ",{"fg":5}],["mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest::testAssertArrayHasKeyAcceptsArrayAccessValue():                                                         ",{}]],"11":[["==> ",{"fg":5}],["An exception has been thrown in file /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php on line 443:                                               ",{}]],"12":[["==> ",{"fg":5}],["exception 'mageekguy\\atoum\\asserter\\exception' with message 'object(SampleArrayAccess) has no key string(3) 'foo'' in /mnt/data/sources/atoum/classes/test/",{}]],"13":[["asserter/generator.php:71                                                                                                                                      ",{}]],"14":[["==> ",{"fg":5}],["Stack trace:                                                                                                                                               ",{}]],"15":[["==> ",{"fg":5}],["#0 /mnt/data/sources/atoum/classes/asserter.php(141): mageekguy\\atoum\\test\\asserter\\generator->asserterFail(Object(mageekguy\\atoum\\test\\phpunit\\asserters\\a",{}]],"16":[["ssertArrayHasKey), 'object(SampleAr...')                                                                                                                       ",{}]],"17":[["==> ",{"fg":5}],["#1 /mnt/data/sources/atoum/classes/test/phpunit/asserters/assertArrayHasKey.php(28): mageekguy\\atoum\\asserter->fail('object(SampleAr...')                  ",{}]],"18":[["==> ",{"fg":5}],["#2 /mnt/data/sources/atoum/classes/asserter/generator.php(143): mageekguy\\atoum\\test\\phpunit\\asserters\\assertArrayHasKey->setWithArguments(Array)          ",{}]],"19":[["==> ",{"fg":5}],["#3 /mnt/data/sources/atoum/classes/test/asserter/generator.php(76): mageekguy\\atoum\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)   ",{}]],"20":[["==> ",{"fg":5}],["#4 /mnt/data/sources/atoum/classes/test.php(370): mageekguy\\atoum\\test\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)                ",{}]],"21":[["==> ",{"fg":5}],["#5 [internal function]: mageekguy\\atoum\\test->mageekguy\\atoum\\{closure}('assertArrayHasK...', Array)                                                       ",{}]],"22":[["==> ",{"fg":5}],["#6 /mnt/data/sources/atoum/classes/test/assertion/manager.php(79): call_user_func_array(Object(Closure), Array)                                            ",{}]],"23":[["==> ",{"fg":5}],["#7 /mnt/data/sources/atoum/classes/test/assertion/manager.php(25): mageekguy\\atoum\\test\\assertion\\manager->invoke('assertArrayHasK...', Array, 2)          ",{}]],"24":[["==> ",{"fg":5}],["#8 /mnt/data/sources/atoum/classes/test.php(187): mageekguy\\atoum\\test\\assertion\\manager->__call('assertArrayHasK...', Array)                              ",{}]],"25":[["==> ",{"fg":5}],["#9 [internal function]: mageekguy\\atoum\\test->__call('assertArrayHasK...', Array)                                                                          ",{}]],"26":[["==> ",{"fg":5}],["#10 /mnt/data/sources/atoum/classes/mock/generator.php(184) : eval()'d code(184): call_user_func_array('parent::__call', Array)                            ",{}]],"27":[["==> ",{"fg":5}],["#11 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->__call('assertArrayHasK...', Array)           ",{}]],"28":[["==> ",{"fg":5}],["#12 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->assertArrayHasKey('foo', Object(SampleArrayAcc",{}]],"29":[["ess))                                                                                                                                                          ",{}]],"30":[["==> ",{"fg":5}],["#13 /mnt/data/sources/atoum/classes/test.php(962): mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest->testAssertArrayHasKeyAcceptsArrayAccessValue()      ",{}]],"31":[["==> ",{"fg":5}],["#14 -(1): mageekguy\\atoum\\test->runTestMethod('testAssertArray...')                                                                                        ",{}]],"32":[["==> ",{"fg":5}],["#15 {main}                                                                                                                                                 ",{}]],"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...                                                                                         ",{}]]},"cursor":{"x":70,"y":33}}],[2.095165,{"lines":{"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...u                                                                                        ",{}]]},"cursor":{"x":71}}],[0.208024,{"lines":{"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uu                                                                                       ",{}]]},"cursor":{"x":72}}],[0.215982,{"lines":{"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uud                                                                                      ",{}]]},"cursor":{"x":73}}],[0.167974,{"lines":{"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uudd                                                                                     ",{}]]},"cursor":{"x":74}}],[0.239982,{"lines":{"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uuddl                                                                                    ",{}]]},"cursor":{"x":75}}],[0.151996,{"lines":{"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uuddlr                                                                                   ",{}]]},"cursor":{"x":76}}],[0.160042,{"lines":{"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uuddlrl                                                                                  ",{}]]},"cursor":{"x":77}}],[0.127918,{"lines":{"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uuddlrlr                                                                                 ",{}]]},"cursor":{"x":78}}],[0.592518,{"lines":{"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uuddlrlrb                                                                                ",{}]]},"cursor":{"x":79}}],[0.167446,{"lines":{"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uuddlrlrba                                                                               ",{}]]},"cursor":{"x":80}}],[0.568076,{"lines":{"0":[["object(SampleArrayAccess)#1656 (1) {                                                                                                                           ",{}]],"1":[["  [\"container\":\"SampleArrayAccess\":private]=>                                                                                                                  ",{}]],"2":[["  array(1) {                                                                                                                                                   ",{}]],"3":[["    [\"foo\"]=>                                                                                                                                                  ",{}]],"4":[["    string(3) \"bar\"                                                                                                                                            ",{}]],"5":[["  }                                                                                                                                                            ",{}]],"6":[["}                                                                                                                                                              ",{}]],"7":[["bool(false)                                                                                                                                                    ",{}]],"8":[["> ",{}],["There is 1 exception",{"fg":5}],[":                                                                                                                                        ",{}]],"9":[["=> ",{"fg":5}],["mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest::testAssertArrayHasKeyAcceptsArrayAccessValue():                                                         ",{}]],"10":[["==> ",{"fg":5}],["An exception has been thrown in file /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php on line 443:                                               ",{}]],"11":[["==> ",{"fg":5}],["exception 'mageekguy\\atoum\\asserter\\exception' with message 'object(SampleArrayAccess) has no key string(3) 'foo'' in /mnt/data/sources/atoum/classes/test/",{}]],"12":[["asserter/generator.php:71                                                                                                                                      ",{}]],"13":[["==> ",{"fg":5}],["Stack trace:                                                                                                                                               ",{}]],"14":[["==> ",{"fg":5}],["#0 /mnt/data/sources/atoum/classes/asserter.php(141): mageekguy\\atoum\\test\\asserter\\generator->asserterFail(Object(mageekguy\\atoum\\test\\phpunit\\asserters\\a",{}]],"15":[["ssertArrayHasKey), 'object(SampleAr...')                                                                                                                       ",{}]],"16":[["==> ",{"fg":5}],["#1 /mnt/data/sources/atoum/classes/test/phpunit/asserters/assertArrayHasKey.php(28): mageekguy\\atoum\\asserter->fail('object(SampleAr...')                  ",{}]],"17":[["==> ",{"fg":5}],["#2 /mnt/data/sources/atoum/classes/asserter/generator.php(143): mageekguy\\atoum\\test\\phpunit\\asserters\\assertArrayHasKey->setWithArguments(Array)          ",{}]],"18":[["==> ",{"fg":5}],["#3 /mnt/data/sources/atoum/classes/test/asserter/generator.php(76): mageekguy\\atoum\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)   ",{}]],"19":[["==> ",{"fg":5}],["#4 /mnt/data/sources/atoum/classes/test.php(370): mageekguy\\atoum\\test\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)                ",{}]],"20":[["==> ",{"fg":5}],["#5 [internal function]: mageekguy\\atoum\\test->mageekguy\\atoum\\{closure}('assertArrayHasK...', Array)                                                       ",{}]],"21":[["==> ",{"fg":5}],["#6 /mnt/data/sources/atoum/classes/test/assertion/manager.php(79): call_user_func_array(Object(Closure), Array)                                            ",{}]],"22":[["==> ",{"fg":5}],["#7 /mnt/data/sources/atoum/classes/test/assertion/manager.php(25): mageekguy\\atoum\\test\\assertion\\manager->invoke('assertArrayHasK...', Array, 2)          ",{}]],"23":[["==> ",{"fg":5}],["#8 /mnt/data/sources/atoum/classes/test.php(187): mageekguy\\atoum\\test\\assertion\\manager->__call('assertArrayHasK...', Array)                              ",{}]],"24":[["==> ",{"fg":5}],["#9 [internal function]: mageekguy\\atoum\\test->__call('assertArrayHasK...', Array)                                                                          ",{}]],"25":[["==> ",{"fg":5}],["#10 /mnt/data/sources/atoum/classes/mock/generator.php(184) : eval()'d code(184): call_user_func_array('parent::__call', Array)                            ",{}]],"26":[["==> ",{"fg":5}],["#11 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->__call('assertArrayHasK...', Array)           ",{}]],"27":[["==> ",{"fg":5}],["#12 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->assertArrayHasKey('foo', Object(SampleArrayAcc",{}]],"28":[["ess))                                                                                                                                                          ",{}]],"29":[["==> ",{"fg":5}],["#13 /mnt/data/sources/atoum/classes/test.php(962): mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest->testAssertArrayHasKeyAcceptsArrayAccessValue()      ",{}]],"30":[["==> ",{"fg":5}],["#14 -(1): mageekguy\\atoum\\test->runTestMethod('testAssertArray...')                                                                                        ",{}]],"31":[["==> ",{"fg":5}],["#15 {main}                                                                                                                                                 ",{}]],"32":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uuddlrlrba                                                                               ",{}]],"33":[["                                                                                                                                                               ",{}]]},"cursor":{"x":0}}],[0.000457,{"lines":{"0":[["==> ",{"fg":5}],["#6 /mnt/data/sources/atoum/classes/test/assertion/manager.php(79): call_user_func_array(Object(Closure), Array)                                            ",{}]],"1":[["==> ",{"fg":5}],["#7 /mnt/data/sources/atoum/classes/test/assertion/manager.php(25): mageekguy\\atoum\\test\\assertion\\manager->invoke('assertArrayHasK...', Array, 2)          ",{}]],"2":[["==> ",{"fg":5}],["#8 /mnt/data/sources/atoum/classes/test.php(187): mageekguy\\atoum\\test\\assertion\\manager->__call('assertArrayHasK...', Array)                              ",{}]],"3":[["==> ",{"fg":5}],["#9 [internal function]: mageekguy\\atoum\\test->__call('assertArrayHasK...', Array)                                                                          ",{}]],"4":[["==> ",{"fg":5}],["#10 /mnt/data/sources/atoum/classes/mock/generator.php(184) : eval()'d code(184): call_user_func_array('parent::__call', Array)                            ",{}]],"5":[["==> ",{"fg":5}],["#11 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->__call('assertArrayHasK...', Array)           ",{}]],"6":[["==> ",{"fg":5}],["#12 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->assertArrayHasKey('foo', Object(SampleArrayAcc",{}]],"7":[["ess))                                                                                                                                                          ",{}]],"8":[["==> ",{"fg":5}],["#13 /mnt/data/sources/atoum/classes/test.php(962): mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest->testAssertArrayHasKeyAcceptsArrayAccessValue()      ",{}]],"9":[["==> ",{"fg":5}],["#14 -(1): mageekguy\\atoum\\test->runTestMethod('testAssertArray...')                                                                                        ",{}]],"10":[["==> ",{"fg":5}],["#15 {main}                                                                                                                                                 ",{}]],"11":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uuddlrlrba                                                                               ",{}]],"12":[["                                        ",{"bg":231}],["                                                                                                                       ",{}]],"13":[["                                        ",{"bg":231}],["                                                                                                                       ",{}]],"14":[["              ",{"bg":231}],["          ",{"bg":16}],["                ",{"bg":231}],["                                                                                                                       ",{}]],"15":[["             ",{"bg":231}],[" ",{"bg":16}],["   ",{"bg":245}],["   ",{"bg":247}],["     ",{"bg":245}],["  ",{"bg":244}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"16":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":245}],["    ",{"bg":247}],[" ",{"bg":245}],["  ",{"bg":244}],[" ",{"bg":245}],[" ",{"bg":247}],["   ",{"bg":245}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"17":[["            ",{"bg":231}],["  ",{"bg":16}],[" ",{"bg":245}],["    ",{"bg":247}],["   ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":245}],[" ",{"bg":247}],["  ",{"bg":245}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"18":[["            ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":244}],["   ",{"bg":245}],[" ",{"bg":247}],[" ",{"bg":245}],["   ",{"bg":244}],["  ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":102}],[" ",{"bg":232}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"19":[["            ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":237}],["  ",{"bg":238}],["  ",{"bg":237}],["          ",{"bg":239}],[" ",{"bg":16}],["           ",{"bg":231}],["                                                                                                                       ",{}]],"20":[["             ",{"bg":231}],[" ",{"bg":16}],["         ",{"bg":235}],["  ",{"bg":236}],["   ",{"bg":244}],[" ",{"bg":238}],[" ",{"bg":16}],["          ",{"bg":231}],["                                                                                                                       ",{}]],"21":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":180}],["  ",{"bg":232}],["   ",{"bg":216}],["  ",{"bg":237}],["  ",{"bg":239}],[" ",{"bg":238}],[" ",{"bg":245}],[" ",{"bg":138}],[" ",{"bg":180}],[" ",{"bg":238}],[" ",{"bg":239}],["  ",{"bg":16}],["        ",{"bg":231}],["                                                                                                                       ",{}]],"22":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":180}],["  ",{"bg":216}],[" ",{"bg":95}],[" ",{"bg":101}],["   ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":216}],[" ",{"bg":180}],[" ",{"bg":216}],[" ",{"bg":181}],["  ",{"bg":243}],[" ",{"bg":237}],["  ",{"bg":16}],["        ",{"bg":231}],["                                                                                                                       ",{}]],"23":[["             ",{"bg":231}],[" ",{"bg":16}],["   ",{"bg":180}],["      ",{"bg":216}],[" ",{"bg":180}],[" ",{"bg":216}],["  ",{"bg":181}],[" ",{"bg":243}],[" ",{"bg":16}],[" ",{"bg":235}],[" ",{"bg":239}],[" ",{"bg":238}],[" ",{"bg":16}],["       ",{"bg":231}],["                                                                                                                       ",{}]],"24":[["               ",{"bg":231}],["  ",{"bg":16}],[" ",{"bg":236}],["    ",{"bg":16}],[" ",{"bg":237}],[" ",{"bg":236}],[" ",{"bg":16}],["    ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":236}],[" ",{"bg":16}],["       ",{"bg":231}],["                                                                                                                       ",{}]],"25":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":236}],["  ",{"bg":16}],[" ",{"bg":173}],["    ",{"bg":137}],[" ",{"bg":173}],[" ",{"bg":236}],[" ",{"bg":16}],["  ",{"bg":236}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"26":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":235}],["  ",{"bg":16}],["      ",{"bg":173}],[" ",{"bg":137}],[" ",{"bg":232}],["  ",{"bg":235}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"27":[["              ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":239}],[" ",{"bg":58}],[" ",{"bg":235}],["    ",{"bg":236}],[" ",{"bg":235}],[" ",{"bg":238}],["   ",{"bg":16}],["             ",{"bg":231}],["                                                                                                                       ",{}]],"28":[["              ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":95}],[" ",{"bg":237}],["    ",{"bg":235}],[" ",{"bg":237}],[" ",{"bg":236}],[" ",{"bg":16}],["               ",{"bg":231}],["                                                                                                                       ",{}]],"29":[["               ",{"bg":231}],["    ",{"bg":16}],["   ",{"bg":231}],["   ",{"bg":16}],["               ",{"bg":231}],["                                                                                                                       ",{}]],"30":[["                                        ",{"bg":231}],["                                                                                                                       ",{}]],"31":[["                                                                                                                                                               ",{}]],"32":[["Oh What ?! Yes I'm the legendary snake but I can't help you find bugs",{"bold":true}],["                                                                                          ",{}]],"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...                                                                                         ",{}]]},"cursor":{"x":70}}],[2.92757,{"lines":{"0":[["==> ",{"fg":5}],["#7 /mnt/data/sources/atoum/classes/test/assertion/manager.php(25): mageekguy\\atoum\\test\\assertion\\manager->invoke('assertArrayHasK...', Array, 2)          ",{}]],"1":[["==> ",{"fg":5}],["#8 /mnt/data/sources/atoum/classes/test.php(187): mageekguy\\atoum\\test\\assertion\\manager->__call('assertArrayHasK...', Array)                              ",{}]],"2":[["==> ",{"fg":5}],["#9 [internal function]: mageekguy\\atoum\\test->__call('assertArrayHasK...', Array)                                                                          ",{}]],"3":[["==> ",{"fg":5}],["#10 /mnt/data/sources/atoum/classes/mock/generator.php(184) : eval()'d code(184): call_user_func_array('parent::__call', Array)                            ",{}]],"4":[["==> ",{"fg":5}],["#11 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->__call('assertArrayHasK...', Array)           ",{}]],"5":[["==> ",{"fg":5}],["#12 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->assertArrayHasKey('foo', Object(SampleArrayAcc",{}]],"6":[["ess))                                                                                                                                                          ",{}]],"7":[["==> ",{"fg":5}],["#13 /mnt/data/sources/atoum/classes/test.php(962): mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest->testAssertArrayHasKeyAcceptsArrayAccessValue()      ",{}]],"8":[["==> ",{"fg":5}],["#14 -(1): mageekguy\\atoum\\test->runTestMethod('testAssertArray...')                                                                                        ",{}]],"9":[["==> ",{"fg":5}],["#15 {main}                                                                                                                                                 ",{}]],"10":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uuddlrlrba                                                                               ",{}]],"11":[["                                        ",{"bg":231}],["                                                                                                                       ",{}]],"13":[["              ",{"bg":231}],["          ",{"bg":16}],["                ",{"bg":231}],["                                                                                                                       ",{}]],"14":[["             ",{"bg":231}],[" ",{"bg":16}],["   ",{"bg":245}],["   ",{"bg":247}],["     ",{"bg":245}],["  ",{"bg":244}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"15":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":245}],["    ",{"bg":247}],[" ",{"bg":245}],["  ",{"bg":244}],[" ",{"bg":245}],[" ",{"bg":247}],["   ",{"bg":245}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"16":[["            ",{"bg":231}],["  ",{"bg":16}],[" ",{"bg":245}],["    ",{"bg":247}],["   ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":245}],[" ",{"bg":247}],["  ",{"bg":245}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"17":[["            ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":244}],["   ",{"bg":245}],[" ",{"bg":247}],[" ",{"bg":245}],["   ",{"bg":244}],["  ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":102}],[" ",{"bg":232}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"18":[["            ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":237}],["  ",{"bg":238}],["  ",{"bg":237}],["          ",{"bg":239}],[" ",{"bg":16}],["           ",{"bg":231}],["                                                                                                                       ",{}]],"19":[["             ",{"bg":231}],[" ",{"bg":16}],["         ",{"bg":235}],["  ",{"bg":236}],["   ",{"bg":244}],[" ",{"bg":238}],[" ",{"bg":16}],["          ",{"bg":231}],["                                                                                                                       ",{}]],"20":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":180}],["  ",{"bg":232}],["   ",{"bg":216}],["  ",{"bg":237}],["  ",{"bg":239}],[" ",{"bg":238}],[" ",{"bg":245}],[" ",{"bg":138}],[" ",{"bg":180}],[" ",{"bg":238}],[" ",{"bg":239}],["  ",{"bg":16}],["        ",{"bg":231}],["                                                                                                                       ",{}]],"21":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":180}],["  ",{"bg":216}],[" ",{"bg":95}],[" ",{"bg":101}],["   ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":216}],[" ",{"bg":180}],[" ",{"bg":216}],[" ",{"bg":181}],["  ",{"bg":243}],[" ",{"bg":237}],["  ",{"bg":16}],["        ",{"bg":231}],["                                                                                                                       ",{}]],"22":[["             ",{"bg":231}],[" ",{"bg":16}],["   ",{"bg":180}],["      ",{"bg":216}],[" ",{"bg":180}],[" ",{"bg":216}],["  ",{"bg":181}],[" ",{"bg":243}],[" ",{"bg":16}],[" ",{"bg":235}],[" ",{"bg":239}],[" ",{"bg":238}],[" ",{"bg":16}],["       ",{"bg":231}],["                                                                                                                       ",{}]],"23":[["               ",{"bg":231}],["  ",{"bg":16}],[" ",{"bg":236}],["    ",{"bg":16}],[" ",{"bg":237}],[" ",{"bg":236}],[" ",{"bg":16}],["    ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":236}],[" ",{"bg":16}],["       ",{"bg":231}],["                                                                                                                       ",{}]],"24":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":236}],["  ",{"bg":16}],[" ",{"bg":173}],["    ",{"bg":137}],[" ",{"bg":173}],[" ",{"bg":236}],[" ",{"bg":16}],["  ",{"bg":236}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"25":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":235}],["  ",{"bg":16}],["      ",{"bg":173}],[" ",{"bg":137}],[" ",{"bg":232}],["  ",{"bg":235}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"26":[["              ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":239}],[" ",{"bg":58}],[" ",{"bg":235}],["    ",{"bg":236}],[" ",{"bg":235}],[" ",{"bg":238}],["   ",{"bg":16}],["             ",{"bg":231}],["                                                                                                                       ",{}]],"27":[["              ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":95}],[" ",{"bg":237}],["    ",{"bg":235}],[" ",{"bg":237}],[" ",{"bg":236}],[" ",{"bg":16}],["               ",{"bg":231}],["                                                                                                                       ",{}]],"28":[["               ",{"bg":231}],["    ",{"bg":16}],["   ",{"bg":231}],["   ",{"bg":16}],["               ",{"bg":231}],["                                                                                                                       ",{}]],"29":[["                                        ",{"bg":231}],["                                                                                                                       ",{}]],"30":[["                                                                                                                                                               ",{}]],"31":[["Oh What ?! Yes I'm the legendary snake but I can't help you find bugs",{"bold":true}],["                                                                                          ",{}]],"32":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...                                                                                         ",{}]],"33":[["                                                                                                                                                               ",{}]]},"cursor":{"x":0}}],[0.102834,{"lines":{"0":[["==> ",{"fg":5}],["#12 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->assertArrayHasKey('foo', Object(SampleArrayAcc",{}]],"1":[["ess))                                                                                                                                                          ",{}]],"2":[["==> ",{"fg":5}],["#13 /mnt/data/sources/atoum/classes/test.php(962): mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest->testAssertArrayHasKeyAcceptsArrayAccessValue()      ",{}]],"3":[["==> ",{"fg":5}],["#14 -(1): mageekguy\\atoum\\test->runTestMethod('testAssertArray...')                                                                                        ",{}]],"4":[["==> ",{"fg":5}],["#15 {main}                                                                                                                                                 ",{}]],"5":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uuddlrlrba                                                                               ",{}]],"6":[["                                        ",{"bg":231}],["                                                                                                                       ",{}]],"7":[["                                        ",{"bg":231}],["                                                                                                                       ",{}]],"8":[["              ",{"bg":231}],["          ",{"bg":16}],["                ",{"bg":231}],["                                                                                                                       ",{}]],"9":[["             ",{"bg":231}],[" ",{"bg":16}],["   ",{"bg":245}],["   ",{"bg":247}],["     ",{"bg":245}],["  ",{"bg":244}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"10":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":245}],["    ",{"bg":247}],[" ",{"bg":245}],["  ",{"bg":244}],[" ",{"bg":245}],[" ",{"bg":247}],["   ",{"bg":245}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"11":[["            ",{"bg":231}],["  ",{"bg":16}],[" ",{"bg":245}],["    ",{"bg":247}],["   ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":245}],[" ",{"bg":247}],["  ",{"bg":245}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"12":[["            ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":244}],["   ",{"bg":245}],[" ",{"bg":247}],[" ",{"bg":245}],["   ",{"bg":244}],["  ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":102}],[" ",{"bg":232}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"13":[["            ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":237}],["  ",{"bg":238}],["  ",{"bg":237}],["          ",{"bg":239}],[" ",{"bg":16}],["           ",{"bg":231}],["                                                                                                                       ",{}]],"14":[["             ",{"bg":231}],[" ",{"bg":16}],["         ",{"bg":235}],["  ",{"bg":236}],["   ",{"bg":244}],[" ",{"bg":238}],[" ",{"bg":16}],["          ",{"bg":231}],["                                                                                                                       ",{}]],"15":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":180}],["  ",{"bg":232}],["   ",{"bg":216}],["  ",{"bg":237}],["  ",{"bg":239}],[" ",{"bg":238}],[" ",{"bg":245}],[" ",{"bg":138}],[" ",{"bg":180}],[" ",{"bg":238}],[" ",{"bg":239}],["  ",{"bg":16}],["        ",{"bg":231}],["                                                                                                                       ",{}]],"16":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":180}],["  ",{"bg":216}],[" ",{"bg":95}],[" ",{"bg":101}],["   ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":216}],[" ",{"bg":180}],[" ",{"bg":216}],[" ",{"bg":181}],["  ",{"bg":243}],[" ",{"bg":237}],["  ",{"bg":16}],["        ",{"bg":231}],["                                                                                                                       ",{}]],"17":[["             ",{"bg":231}],[" ",{"bg":16}],["   ",{"bg":180}],["      ",{"bg":216}],[" ",{"bg":180}],[" ",{"bg":216}],["  ",{"bg":181}],[" ",{"bg":243}],[" ",{"bg":16}],[" ",{"bg":235}],[" ",{"bg":239}],[" ",{"bg":238}],[" ",{"bg":16}],["       ",{"bg":231}],["                                                                                                                       ",{}]],"18":[["               ",{"bg":231}],["  ",{"bg":16}],[" ",{"bg":236}],["    ",{"bg":16}],[" ",{"bg":237}],[" ",{"bg":236}],[" ",{"bg":16}],["    ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":236}],[" ",{"bg":16}],["       ",{"bg":231}],["                                                                                                                       ",{}]],"19":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":236}],["  ",{"bg":16}],[" ",{"bg":173}],["    ",{"bg":137}],[" ",{"bg":173}],[" ",{"bg":236}],[" ",{"bg":16}],["  ",{"bg":236}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"20":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":235}],["  ",{"bg":16}],["      ",{"bg":173}],[" ",{"bg":137}],[" ",{"bg":232}],["  ",{"bg":235}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"21":[["              ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":239}],[" ",{"bg":58}],[" ",{"bg":235}],["    ",{"bg":236}],[" ",{"bg":235}],[" ",{"bg":238}],["   ",{"bg":16}],["             ",{"bg":231}],["                                                                                                                       ",{}]],"22":[["              ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":95}],[" ",{"bg":237}],["    ",{"bg":235}],[" ",{"bg":237}],[" ",{"bg":236}],[" ",{"bg":16}],["               ",{"bg":231}],["                                                                                                                       ",{}]],"23":[["               ",{"bg":231}],["    ",{"bg":16}],["   ",{"bg":231}],["   ",{"bg":16}],["               ",{"bg":231}],["                                                                                                                       ",{}]],"24":[["                                        ",{"bg":231}],["                                                                                                                       ",{}]],"25":[["                                                                                                                                                               ",{}]],"26":[["Oh What ?! Yes I'm the legendary snake but I can't help you find bugs",{"bold":true}],["                                                                                          ",{}]],"27":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...                                                                                         ",{}]],"28":[["> ",{}],["PHP path",{"fg":6,"bold":true}],[": /usr/bin/php5                                                                                                                                      ",{}]],"29":[["> ",{}],["PHP version",{"fg":6,"bold":true}],[":                                                                                                                                                 ",{}]],"30":[["=> ",{"fg":6,"bold":true}],["PHP 5.4.6-1ubuntu1.5 (cli) (built: Dec 12 2013 04:39:44)                                                                                                    ",{}]],"31":[["=> ",{"fg":6,"bold":true}],["Copyright (c) 1997-2012 The PHP Group                                                                                                                       ",{}]],"32":[["=> ",{"fg":6,"bold":true}],["Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies                                                                                               ",{}]]}}],[0.117524,{"lines":{"0":[["ess))                                                                                                                                                          ",{}]],"1":[["==> ",{"fg":5}],["#13 /mnt/data/sources/atoum/classes/test.php(962): mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest->testAssertArrayHasKeyAcceptsArrayAccessValue()      ",{}]],"2":[["==> ",{"fg":5}],["#14 -(1): mageekguy\\atoum\\test->runTestMethod('testAssertArray...')                                                                                        ",{}]],"3":[["==> ",{"fg":5}],["#15 {main}                                                                                                                                                 ",{}]],"4":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...uuddlrlrba                                                                               ",{}]],"5":[["                                        ",{"bg":231}],["                                                                                                                       ",{}]],"7":[["              ",{"bg":231}],["          ",{"bg":16}],["                ",{"bg":231}],["                                                                                                                       ",{}]],"8":[["             ",{"bg":231}],[" ",{"bg":16}],["   ",{"bg":245}],["   ",{"bg":247}],["     ",{"bg":245}],["  ",{"bg":244}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"9":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":245}],["    ",{"bg":247}],[" ",{"bg":245}],["  ",{"bg":244}],[" ",{"bg":245}],[" ",{"bg":247}],["   ",{"bg":245}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"10":[["            ",{"bg":231}],["  ",{"bg":16}],[" ",{"bg":245}],["    ",{"bg":247}],["   ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":245}],[" ",{"bg":247}],["  ",{"bg":245}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"11":[["            ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":244}],["   ",{"bg":245}],[" ",{"bg":247}],[" ",{"bg":245}],["   ",{"bg":244}],["  ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":102}],[" ",{"bg":232}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"12":[["            ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":237}],["  ",{"bg":238}],["  ",{"bg":237}],["          ",{"bg":239}],[" ",{"bg":16}],["           ",{"bg":231}],["                                                                                                                       ",{}]],"13":[["             ",{"bg":231}],[" ",{"bg":16}],["         ",{"bg":235}],["  ",{"bg":236}],["   ",{"bg":244}],[" ",{"bg":238}],[" ",{"bg":16}],["          ",{"bg":231}],["                                                                                                                       ",{}]],"14":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":180}],["  ",{"bg":232}],["   ",{"bg":216}],["  ",{"bg":237}],["  ",{"bg":239}],[" ",{"bg":238}],[" ",{"bg":245}],[" ",{"bg":138}],[" ",{"bg":180}],[" ",{"bg":238}],[" ",{"bg":239}],["  ",{"bg":16}],["        ",{"bg":231}],["                                                                                                                       ",{}]],"15":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":180}],["  ",{"bg":216}],[" ",{"bg":95}],[" ",{"bg":101}],["   ",{"bg":245}],[" ",{"bg":244}],[" ",{"bg":216}],[" ",{"bg":180}],[" ",{"bg":216}],[" ",{"bg":181}],["  ",{"bg":243}],[" ",{"bg":237}],["  ",{"bg":16}],["        ",{"bg":231}],["                                                                                                                       ",{}]],"16":[["             ",{"bg":231}],[" ",{"bg":16}],["   ",{"bg":180}],["      ",{"bg":216}],[" ",{"bg":180}],[" ",{"bg":216}],["  ",{"bg":181}],[" ",{"bg":243}],[" ",{"bg":16}],[" ",{"bg":235}],[" ",{"bg":239}],[" ",{"bg":238}],[" ",{"bg":16}],["       ",{"bg":231}],["                                                                                                                       ",{}]],"17":[["               ",{"bg":231}],["  ",{"bg":16}],[" ",{"bg":236}],["    ",{"bg":16}],[" ",{"bg":237}],[" ",{"bg":236}],[" ",{"bg":16}],["    ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":236}],[" ",{"bg":16}],["       ",{"bg":231}],["                                                                                                                       ",{}]],"18":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":236}],["  ",{"bg":16}],[" ",{"bg":173}],["    ",{"bg":137}],[" ",{"bg":173}],[" ",{"bg":236}],[" ",{"bg":16}],["  ",{"bg":236}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"19":[["             ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":235}],["  ",{"bg":16}],["      ",{"bg":173}],[" ",{"bg":137}],[" ",{"bg":232}],["  ",{"bg":235}],[" ",{"bg":16}],["            ",{"bg":231}],["                                                                                                                       ",{}]],"20":[["              ",{"bg":231}],[" ",{"bg":16}],[" ",{"bg":239}],[" ",{"bg":58}],[" ",{"bg":235}],["    ",{"bg":236}],[" ",{"bg":235}],[" ",{"bg":238}],["   ",{"bg":16}],["             ",{"bg":231}],["                                                                                                                       ",{}]],"21":[["              ",{"bg":231}],[" ",{"bg":16}],["  ",{"bg":95}],[" ",{"bg":237}],["    ",{"bg":235}],[" ",{"bg":237}],[" ",{"bg":236}],[" ",{"bg":16}],["               ",{"bg":231}],["                                                                                                                       ",{}]],"22":[["               ",{"bg":231}],["    ",{"bg":16}],["   ",{"bg":231}],["   ",{"bg":16}],["               ",{"bg":231}],["                                                                                                                       ",{}]],"23":[["                                        ",{"bg":231}],["                                                                                                                       ",{}]],"24":[["                                                                                                                                                               ",{}]],"25":[["Oh What ?! Yes I'm the legendary snake but I can't help you find bugs",{"bold":true}],["                                                                                          ",{}]],"26":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...                                                                                         ",{}]],"27":[["> ",{}],["PHP path",{"fg":6,"bold":true}],[": /usr/bin/php5                                                                                                                                      ",{}]],"28":[["> ",{}],["PHP version",{"fg":6,"bold":true}],[":                                                                                                                                                 ",{}]],"29":[["=> ",{"fg":6,"bold":true}],["PHP 5.4.6-1ubuntu1.5 (cli) (built: Dec 12 2013 04:39:44)                                                                                                    ",{}]],"30":[["=> ",{"fg":6,"bold":true}],["Copyright (c) 1997-2012 The PHP Group                                                                                                                       ",{}]],"31":[["=> ",{"fg":6,"bold":true}],["Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies                                                                                               ",{}]],"32":[["> ",{}],["mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest",{"fg":6,"bold":true}],["...                                                                                                        ",{}]],"33":[["[.___________________________________________________________][0/1]                                                                                            ",{}]]},"cursor":{"x":67}}],[0.193003,{"lines":{"33":[["[X___________________________________________________________][1/1]                                                                                            ",{}]]}}],[0.008817999999999999,{"lines":{"0":[["string(3) \"foo\"                                                                                                                                                ",{}]],"1":[["object(SampleArrayAccess)#1656 (1) {                                                                                                                           ",{}]],"2":[["  [\"container\":\"SampleArrayAccess\":private]=>                                                                                                                  ",{}]],"3":[["  array(1) {                                                                                                                                                   ",{}]],"4":[["    [\"foo\"]=>                                                                                                                                                  ",{}]],"5":[["    string(3) \"bar\"                                                                                                                                            ",{}]],"6":[["  }                                                                                                                                                            ",{}]],"7":[["}                                                                                                                                                              ",{}]],"8":[["bool(false)                                                                                                                                                    ",{}]],"9":[["> ",{}],["There is 1 exception",{"fg":5}],[":                                                                                                                                        ",{}]],"10":[["=> ",{"fg":5}],["mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest::testAssertArrayHasKeyAcceptsArrayAccessValue():                                                         ",{}]],"11":[["==> ",{"fg":5}],["An exception has been thrown in file /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php on line 443:                                               ",{}]],"12":[["==> ",{"fg":5}],["exception 'mageekguy\\atoum\\asserter\\exception' with message 'object(SampleArrayAccess) has no key string(3) 'foo'' in /mnt/data/sources/atoum/classes/test/",{}]],"13":[["asserter/generator.php:71                                                                                                                                      ",{}]],"14":[["==> ",{"fg":5}],["Stack trace:                                                                                                                                               ",{}]],"15":[["==> ",{"fg":5}],["#0 /mnt/data/sources/atoum/classes/asserter.php(141): mageekguy\\atoum\\test\\asserter\\generator->asserterFail(Object(mageekguy\\atoum\\test\\phpunit\\asserters\\a",{}]],"16":[["ssertArrayHasKey), 'object(SampleAr...')                                                                                                                       ",{}]],"17":[["==> ",{"fg":5}],["#1 /mnt/data/sources/atoum/classes/test/phpunit/asserters/assertArrayHasKey.php(28): mageekguy\\atoum\\asserter->fail('object(SampleAr...')                  ",{}]],"18":[["==> ",{"fg":5}],["#2 /mnt/data/sources/atoum/classes/asserter/generator.php(143): mageekguy\\atoum\\test\\phpunit\\asserters\\assertArrayHasKey->setWithArguments(Array)          ",{}]],"19":[["==> ",{"fg":5}],["#3 /mnt/data/sources/atoum/classes/test/asserter/generator.php(76): mageekguy\\atoum\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)   ",{}]],"20":[["==> ",{"fg":5}],["#4 /mnt/data/sources/atoum/classes/test.php(370): mageekguy\\atoum\\test\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)                ",{}]],"21":[["==> ",{"fg":5}],["#5 [internal function]: mageekguy\\atoum\\test->mageekguy\\atoum\\{closure}('assertArrayHasK...', Array)                                                       ",{}]],"22":[["==> ",{"fg":5}],["#6 /mnt/data/sources/atoum/classes/test/assertion/manager.php(79): call_user_func_array(Object(Closure), Array)                                            ",{}]],"23":[["==> ",{"fg":5}],["#7 /mnt/data/sources/atoum/classes/test/assertion/manager.php(25): mageekguy\\atoum\\test\\assertion\\manager->invoke('assertArrayHasK...', Array, 2)          ",{}]],"24":[["==> ",{"fg":5}],["#8 /mnt/data/sources/atoum/classes/test.php(187): mageekguy\\atoum\\test\\assertion\\manager->__call('assertArrayHasK...', Array)                              ",{}]],"25":[["==> ",{"fg":5}],["#9 [internal function]: mageekguy\\atoum\\test->__call('assertArrayHasK...', Array)                                                                          ",{}]],"26":[["==> ",{"fg":5}],["#10 /mnt/data/sources/atoum/classes/mock/generator.php(184) : eval()'d code(184): call_user_func_array('parent::__call', Array)                            ",{}]],"27":[["==> ",{"fg":5}],["#11 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->__call('assertArrayHasK...', Array)           ",{}]],"28":[["==> ",{"fg":5}],["#12 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->assertArrayHasKey('foo', Object(SampleArrayAcc",{}]],"29":[["ess))                                                                                                                                                          ",{}]],"30":[["==> ",{"fg":5}],["#13 /mnt/data/sources/atoum/classes/test.php(962): mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest->testAssertArrayHasKeyAcceptsArrayAccessValue()      ",{}]],"31":[["==> ",{"fg":5}],["#14 -(1): mageekguy\\atoum\\test->runTestMethod('testAssertArray...')                                                                                        ",{}]],"32":[["==> ",{"fg":5}],["#15 {main}                                                                                                                                                 ",{}]],"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...                                                                                         ",{}]]},"cursor":{"x":70}}],[0.937836,{"lines":{"33":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...q                                                                                        ",{}]]},"cursor":{"x":71}}],[0.679987,{"lines":{"0":[["object(SampleArrayAccess)#1656 (1) {                                                                                                                           ",{}]],"1":[["  [\"container\":\"SampleArrayAccess\":private]=>                                                                                                                  ",{}]],"2":[["  array(1) {                                                                                                                                                   ",{}]],"3":[["    [\"foo\"]=>                                                                                                                                                  ",{}]],"4":[["    string(3) \"bar\"                                                                                                                                            ",{}]],"5":[["  }                                                                                                                                                            ",{}]],"6":[["}                                                                                                                                                              ",{}]],"7":[["bool(false)                                                                                                                                                    ",{}]],"8":[["> ",{}],["There is 1 exception",{"fg":5}],[":                                                                                                                                        ",{}]],"9":[["=> ",{"fg":5}],["mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest::testAssertArrayHasKeyAcceptsArrayAccessValue():                                                         ",{}]],"10":[["==> ",{"fg":5}],["An exception has been thrown in file /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php on line 443:                                               ",{}]],"11":[["==> ",{"fg":5}],["exception 'mageekguy\\atoum\\asserter\\exception' with message 'object(SampleArrayAccess) has no key string(3) 'foo'' in /mnt/data/sources/atoum/classes/test/",{}]],"12":[["asserter/generator.php:71                                                                                                                                      ",{}]],"13":[["==> ",{"fg":5}],["Stack trace:                                                                                                                                               ",{}]],"14":[["==> ",{"fg":5}],["#0 /mnt/data/sources/atoum/classes/asserter.php(141): mageekguy\\atoum\\test\\asserter\\generator->asserterFail(Object(mageekguy\\atoum\\test\\phpunit\\asserters\\a",{}]],"15":[["ssertArrayHasKey), 'object(SampleAr...')                                                                                                                       ",{}]],"16":[["==> ",{"fg":5}],["#1 /mnt/data/sources/atoum/classes/test/phpunit/asserters/assertArrayHasKey.php(28): mageekguy\\atoum\\asserter->fail('object(SampleAr...')                  ",{}]],"17":[["==> ",{"fg":5}],["#2 /mnt/data/sources/atoum/classes/asserter/generator.php(143): mageekguy\\atoum\\test\\phpunit\\asserters\\assertArrayHasKey->setWithArguments(Array)          ",{}]],"18":[["==> ",{"fg":5}],["#3 /mnt/data/sources/atoum/classes/test/asserter/generator.php(76): mageekguy\\atoum\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)   ",{}]],"19":[["==> ",{"fg":5}],["#4 /mnt/data/sources/atoum/classes/test.php(370): mageekguy\\atoum\\test\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)                ",{}]],"20":[["==> ",{"fg":5}],["#5 [internal function]: mageekguy\\atoum\\test->mageekguy\\atoum\\{closure}('assertArrayHasK...', Array)                                                       ",{}]],"21":[["==> ",{"fg":5}],["#6 /mnt/data/sources/atoum/classes/test/assertion/manager.php(79): call_user_func_array(Object(Closure), Array)                                            ",{}]],"22":[["==> ",{"fg":5}],["#7 /mnt/data/sources/atoum/classes/test/assertion/manager.php(25): mageekguy\\atoum\\test\\assertion\\manager->invoke('assertArrayHasK...', Array, 2)          ",{}]],"23":[["==> ",{"fg":5}],["#8 /mnt/data/sources/atoum/classes/test.php(187): mageekguy\\atoum\\test\\assertion\\manager->__call('assertArrayHasK...', Array)                              ",{}]],"24":[["==> ",{"fg":5}],["#9 [internal function]: mageekguy\\atoum\\test->__call('assertArrayHasK...', Array)                                                                          ",{}]],"25":[["==> ",{"fg":5}],["#10 /mnt/data/sources/atoum/classes/mock/generator.php(184) : eval()'d code(184): call_user_func_array('parent::__call', Array)                            ",{}]],"26":[["==> ",{"fg":5}],["#11 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->__call('assertArrayHasK...', Array)           ",{}]],"27":[["==> ",{"fg":5}],["#12 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->assertArrayHasKey('foo', Object(SampleArrayAcc",{}]],"28":[["ess))                                                                                                                                                          ",{}]],"29":[["==> ",{"fg":5}],["#13 /mnt/data/sources/atoum/classes/test.php(962): mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest->testAssertArrayHasKeyAcceptsArrayAccessValue()      ",{}]],"30":[["==> ",{"fg":5}],["#14 -(1): mageekguy\\atoum\\test->runTestMethod('testAssertArray...')                                                                                        ",{}]],"31":[["==> ",{"fg":5}],["#15 {main}                                                                                                                                                 ",{}]],"32":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...q                                                                                        ",{}]],"33":[["                                                                                                                                                               ",{}]]},"cursor":{"x":0}}],[0.005501,{}],[0.659046,{"lines":{"0":[["  [\"container\":\"SampleArrayAccess\":private]=>                                                                                                                  ",{}]],"1":[["  array(1) {                                                                                                                                                   ",{}]],"2":[["    [\"foo\"]=>                                                                                                                                                  ",{}]],"3":[["    string(3) \"bar\"                                                                                                                                            ",{}]],"4":[["  }                                                                                                                                                            ",{}]],"5":[["}                                                                                                                                                              ",{}]],"6":[["bool(false)                                                                                                                                                    ",{}]],"7":[["> ",{}],["There is 1 exception",{"fg":5}],[":                                                                                                                                        ",{}]],"8":[["=> ",{"fg":5}],["mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest::testAssertArrayHasKeyAcceptsArrayAccessValue():                                                         ",{}]],"9":[["==> ",{"fg":5}],["An exception has been thrown in file /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php on line 443:                                               ",{}]],"10":[["==> ",{"fg":5}],["exception 'mageekguy\\atoum\\asserter\\exception' with message 'object(SampleArrayAccess) has no key string(3) 'foo'' in /mnt/data/sources/atoum/classes/test/",{}]],"11":[["asserter/generator.php:71                                                                                                                                      ",{}]],"12":[["==> ",{"fg":5}],["Stack trace:                                                                                                                                               ",{}]],"13":[["==> ",{"fg":5}],["#0 /mnt/data/sources/atoum/classes/asserter.php(141): mageekguy\\atoum\\test\\asserter\\generator->asserterFail(Object(mageekguy\\atoum\\test\\phpunit\\asserters\\a",{}]],"14":[["ssertArrayHasKey), 'object(SampleAr...')                                                                                                                       ",{}]],"15":[["==> ",{"fg":5}],["#1 /mnt/data/sources/atoum/classes/test/phpunit/asserters/assertArrayHasKey.php(28): mageekguy\\atoum\\asserter->fail('object(SampleAr...')                  ",{}]],"16":[["==> ",{"fg":5}],["#2 /mnt/data/sources/atoum/classes/asserter/generator.php(143): mageekguy\\atoum\\test\\phpunit\\asserters\\assertArrayHasKey->setWithArguments(Array)          ",{}]],"17":[["==> ",{"fg":5}],["#3 /mnt/data/sources/atoum/classes/test/asserter/generator.php(76): mageekguy\\atoum\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)   ",{}]],"18":[["==> ",{"fg":5}],["#4 /mnt/data/sources/atoum/classes/test.php(370): mageekguy\\atoum\\test\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)                ",{}]],"19":[["==> ",{"fg":5}],["#5 [internal function]: mageekguy\\atoum\\test->mageekguy\\atoum\\{closure}('assertArrayHasK...', Array)                                                       ",{}]],"20":[["==> ",{"fg":5}],["#6 /mnt/data/sources/atoum/classes/test/assertion/manager.php(79): call_user_func_array(Object(Closure), Array)                                            ",{}]],"21":[["==> ",{"fg":5}],["#7 /mnt/data/sources/atoum/classes/test/assertion/manager.php(25): mageekguy\\atoum\\test\\assertion\\manager->invoke('assertArrayHasK...', Array, 2)          ",{}]],"22":[["==> ",{"fg":5}],["#8 /mnt/data/sources/atoum/classes/test.php(187): mageekguy\\atoum\\test\\assertion\\manager->__call('assertArrayHasK...', Array)                              ",{}]],"23":[["==> ",{"fg":5}],["#9 [internal function]: mageekguy\\atoum\\test->__call('assertArrayHasK...', Array)                                                                          ",{}]],"24":[["==> ",{"fg":5}],["#10 /mnt/data/sources/atoum/classes/mock/generator.php(184) : eval()'d code(184): call_user_func_array('parent::__call', Array)                            ",{}]],"25":[["==> ",{"fg":5}],["#11 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->__call('assertArrayHasK...', Array)           ",{}]],"26":[["==> ",{"fg":5}],["#12 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->assertArrayHasKey('foo', Object(SampleArrayAcc",{}]],"27":[["ess))                                                                                                                                                          ",{}]],"28":[["==> ",{"fg":5}],["#13 /mnt/data/sources/atoum/classes/test.php(962): mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest->testAssertArrayHasKeyAcceptsArrayAccessValue()      ",{}]],"29":[["==> ",{"fg":5}],["#14 -(1): mageekguy\\atoum\\test->runTestMethod('testAssertArray...')                                                                                        ",{}]],"30":[["==> ",{"fg":5}],["#15 {main}                                                                                                                                                 ",{}]],"31":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...q                                                                                        ",{}]],"32":[[" jubianchi ",{"bg":0}],["⮀ ~/sources/atoum ",{"fg":0,"bg":4}],["⮀",{"fg":4,"bg":0}],[" ⱱ * ",{"fg":2,"bg":0}],["⮀ ⭠ atoum-phpunit@a990b23 ",{"fg":0,"bg":3}],["⮀",{"fg":3}],["                                                                                                 ",{}]],"33":[[" $ ",{"bg":0}],["⮀",{"fg":0}],["                                                                                                                     ",{}],["⮂",{"fg":4}],[" lun. 30 déc. 2013 17:40:24 ",{"fg":7,"bg":4}],["⮂",{"fg":1,"bg":4}],[" 5.4.6 ",{"fg":7,"bg":1}],[" ",{}]]},"cursor":{"x":5}}],[3.7e-05,{}],[0.892343,{"lines":{"0":[["  array(1) {                                                                                                                                                   ",{}]],"1":[["    [\"foo\"]=>                                                                                                                                                  ",{}]],"2":[["    string(3) \"bar\"                                                                                                                                            ",{}]],"3":[["  }                                                                                                                                                            ",{}]],"4":[["}                                                                                                                                                              ",{}]],"5":[["bool(false)                                                                                                                                                    ",{}]],"6":[["> ",{}],["There is 1 exception",{"fg":5}],[":                                                                                                                                        ",{}]],"7":[["=> ",{"fg":5}],["mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest::testAssertArrayHasKeyAcceptsArrayAccessValue():                                                         ",{}]],"8":[["==> ",{"fg":5}],["An exception has been thrown in file /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php on line 443:                                               ",{}]],"9":[["==> ",{"fg":5}],["exception 'mageekguy\\atoum\\asserter\\exception' with message 'object(SampleArrayAccess) has no key string(3) 'foo'' in /mnt/data/sources/atoum/classes/test/",{}]],"10":[["asserter/generator.php:71                                                                                                                                      ",{}]],"11":[["==> ",{"fg":5}],["Stack trace:                                                                                                                                               ",{}]],"12":[["==> ",{"fg":5}],["#0 /mnt/data/sources/atoum/classes/asserter.php(141): mageekguy\\atoum\\test\\asserter\\generator->asserterFail(Object(mageekguy\\atoum\\test\\phpunit\\asserters\\a",{}]],"13":[["ssertArrayHasKey), 'object(SampleAr...')                                                                                                                       ",{}]],"14":[["==> ",{"fg":5}],["#1 /mnt/data/sources/atoum/classes/test/phpunit/asserters/assertArrayHasKey.php(28): mageekguy\\atoum\\asserter->fail('object(SampleAr...')                  ",{}]],"15":[["==> ",{"fg":5}],["#2 /mnt/data/sources/atoum/classes/asserter/generator.php(143): mageekguy\\atoum\\test\\phpunit\\asserters\\assertArrayHasKey->setWithArguments(Array)          ",{}]],"16":[["==> ",{"fg":5}],["#3 /mnt/data/sources/atoum/classes/test/asserter/generator.php(76): mageekguy\\atoum\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)   ",{}]],"17":[["==> ",{"fg":5}],["#4 /mnt/data/sources/atoum/classes/test.php(370): mageekguy\\atoum\\test\\asserter\\generator->getAsserterInstance('assertArrayHasK...', Array)                ",{}]],"18":[["==> ",{"fg":5}],["#5 [internal function]: mageekguy\\atoum\\test->mageekguy\\atoum\\{closure}('assertArrayHasK...', Array)                                                       ",{}]],"19":[["==> ",{"fg":5}],["#6 /mnt/data/sources/atoum/classes/test/assertion/manager.php(79): call_user_func_array(Object(Closure), Array)                                            ",{}]],"20":[["==> ",{"fg":5}],["#7 /mnt/data/sources/atoum/classes/test/assertion/manager.php(25): mageekguy\\atoum\\test\\assertion\\manager->invoke('assertArrayHasK...', Array, 2)          ",{}]],"21":[["==> ",{"fg":5}],["#8 /mnt/data/sources/atoum/classes/test.php(187): mageekguy\\atoum\\test\\assertion\\manager->__call('assertArrayHasK...', Array)                              ",{}]],"22":[["==> ",{"fg":5}],["#9 [internal function]: mageekguy\\atoum\\test->__call('assertArrayHasK...', Array)                                                                          ",{}]],"23":[["==> ",{"fg":5}],["#10 /mnt/data/sources/atoum/classes/mock/generator.php(184) : eval()'d code(184): call_user_func_array('parent::__call', Array)                            ",{}]],"24":[["==> ",{"fg":5}],["#11 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->__call('assertArrayHasK...', Array)           ",{}]],"25":[["==> ",{"fg":5}],["#12 /mnt/data/sources/atoum/tests/units/phpunit/AssertTest.php(443): mock\\mageekguy\\atoum\\test\\phpunit\\test->assertArrayHasKey('foo', Object(SampleArrayAcc",{}]],"26":[["ess))                                                                                                                                                          ",{}]],"27":[["==> ",{"fg":5}],["#13 /mnt/data/sources/atoum/classes/test.php(962): mageekguy\\atoum\\tests\\phpunit\\Framework_AssertTest->testAssertArrayHasKeyAcceptsArrayAccessValue()      ",{}]],"28":[["==> ",{"fg":5}],["#14 -(1): mageekguy\\atoum\\test->runTestMethod('testAssertArray...')                                                                                        ",{}]],"29":[["==> ",{"fg":5}],["#15 {main}                                                                                                                                                 ",{}]],"30":[["Press <Enter> to reexecute, press any other key and <Enter> to stop...q                                                                                        ",{}]],"31":[[" jubianchi ",{"bg":0}],["⮀ ~/sources/atoum ",{"fg":0,"bg":4}],["⮀",{"fg":4,"bg":0}],[" ⱱ * ",{"fg":2,"bg":0}],["⮀ ⭠ atoum-phpunit@a990b23 ",{"fg":0,"bg":3}],["⮀",{"fg":3}],["                                                                                                 ",{}]],"32":[[" $ ",{"bg":0}],["⮀",{"fg":0}],["                                                                                                                     ",{}],["⮂",{"fg":4}],[" lun. 30 déc. 2013 17:40:24 ",{"fg":7,"bg":4}],["⮂",{"fg":1,"bg":4}],[" 5.4.6 ",{"fg":7,"bg":1}],[" ",{}]],"33":[["                                                                                                                                                               ",{}]]},"cursor":{"x":0}}]]